#!/bin/bash

# Set paths
SloKJVepubPath=/home/pc/Dokumenti/GitHub/SloKJV/ePUB
# Od tukaj pobira Python skripta
SloKJV_Module_Path=/home/pc/.sword
SloKJV_Mods_Path=/home/pc/.sword/mods.d
# Sem daje Sword Glej navodila... https://wiki.crosswire.org/Tutorial:Compiling_%26_Installing_SWORD
# SloKJV_Module_Path=/usr/share/sword/modules/texts/ztext/slokjv
# SloKJV_Mods_Path=/usr/share/sword/mods.d
SloKJV_Github=/home/pc/Dokumenti/GitHub/SloKJV

# SloKJV module from Github
# wget https://github.com/msavli/SloKJV/raw/master/SloKJV_sword.xml -O $SloKJVepubPath/SloKJV_sword.xml
#   To sem dobil iz   git clone https://github.com/pierre-amadio/SwordSandBox

echo
echo "   Vlecem iz Githuba....  zakomentirano"
echo 
cd $SloKJV_Github
git pull


# Create folders
mkdir  $SloKJVepubPath                                                          >/dev/null 2>&1
cd $SloKJVepubPath
rm -rf html
mkdir html                                                                      >/dev/null 2>&1
mkdir $SloKJV_Module_Path                                                       >/dev/null 2>&1
mkdir $SloKJV_Module_Path/modules                                               >/dev/null 2>&1
mkdir $SloKJV_Module_Path/modules/texts                                         >/dev/null 2>&1
mkdir $SloKJV_Module_Path/modules/texts/ztext                                   >/dev/null 2>&1
mkdir $SloKJV_Module_Path/modules/texts/ztext/slokjv                            >/dev/null 2>&1



# Kopira predloge in kaj je se za narediti
cp templates/foreword.html          html/02-foreword.html
cp templates/jezus.html             html/03-jezus.html 
cp templates/cover.html             html/00_preimenuj_me_v_cover.xhtml
cp templates/content_opf.xhtml      html/00_vsebino_metadata_daj_v_content.opf.xhtml
echo "<html><body></body></html>" > html/00_pobrisi_Section001.xhtml
echo "<html><body></body></html>" > html/00_dodaj_font.xhtml
echo "<html><body></body></html>" > html/00_vsebino_toc.ncx_prekopiraj_v_toc.ncx_fajl.xhtml


echo
echo "        Prekopiram conf datoteko SloKJV modula "
cp $SloKJV_Github/slokjv.conf $SloKJV_Mods_Path/slokjv.conf
echo
echo "   Kreiram SloKJV modul iz SloKJV_sword.xml datoteke ..."
osis2mod $SloKJV_Module_Path/modules/texts/ztext/slokjv $SloKJV_Github/SloKJV_sword.xml -v KJVA -z
# osis2mod /usr/share/sword/modules/texts/ztext/slokjv/ /home/pc/Dokumenti/GitHub/SloKJV/SloKJV_sword.xml -v KJVA -z

# Patch from
# wget https://parlons-de-dragons.com/slokjv/slokjv.diff --no-check-certificate -O $SloKJVepubPath/slokjv.diff
# patch $SloKJVepubPath/test.py slokjv.diff 

# Making html files...
#  Sword datoteko vzame iz mape /home/pc/.sword
#  Naslove knjig Razodetje,..  vzame iz /home/pc/Dokumenti/epub/templates/sl-utf8.conf
echo
echo "   Kreiram html datoteke..."
echo

python3 $SloKJVepubPath/test.py   # |& tee    $SloKJVepubPath/log.txt

cd html

echo
echo "   Preimenujem datoteke poglavij da bodo imele  *-1.html  ->  *-0001.htm  *-0002.htm ..."
# Loop through all HTML files in the current directory
for file in *.html; do
  # Extract the base name and the extension
  base="${file%.html}"

  # Use regex to separate the parts of the filename
  if [[ $base =~ ([0-9][0-9]-[0-9A-Za-z]+-)([0-9]+) ]]; then
    prefix="${BASH_REMATCH[1]}"
    number="${BASH_REMATCH[2]}"

    # Pad the number with leading zeros to make it 3 digits
    new_number=$(printf "%04d" "$number")

    # Construct the new filename
    new_file="${prefix}${new_number}.html"

    # Rename the file
    mv "$file" "$new_file"
  fi
done


echo "   Preimenujem datoteke knjig da bodo imele   69-Rev.html  ->  69-Rev-0000.htm"
# Loop through all HTML files in the current directory
for file in *.html; do
  # Extract the base name and the extension
  base="${file%.html}"

  # Use regex to separate the parts of the filename
  if [[ $base =~ ([0-9][0-9]-[0-9A-Z][A-Za-z]+) ]]; then
    prefix="${BASH_REMATCH[1]}"

    # Construct the new filename
    new_file="${prefix}-0000.html"

    # Rename the file
    mv "${prefix}.html" "$new_file" /dev/null 2>/dev/null 
  fi
done


echo "   Zdruzi knjige in poglavja od pripadajocih knjig  ->  69-Rev.html "
# Define the prefix pattern
prefix_pattern='^[0-9]{2}-[A-Z0-9][A-Za-z]+-'

# Get the list of files in the current directory
files=$(ls)

# Iterate over each file
for file in $files; do
    # Check if the file name matches the prefix pattern
    if [[ $file =~ $prefix_pattern ]]; then
        # Extract the prefix
        prefix=${BASH_REMATCH[0]}
        # Find all files with the same prefix
        matching_files=$(ls ${prefix}*.html)
        # Concatenate the contents of the matching files into a new file
        cat $matching_files > "${prefix::-1}.html"
    fi
done


echo "   Pobrisem datoteke od knjig in od poglavij"
# Define the pattern
   pattern='^[0-9][0-9]-[A-Z0-9][A-Za-z]+-[0-9]+\.html$'
   # Use find to locate and delete files matching the pattern
   find . -type f -regex './[0-9][0-9]-[A-Z0-9][A-Za-z]+-[0-9][0-9][0-9][0-9]\.html' -exec rm {} \;
echo "   Files deleted successfully."
echo



# Define the header content
header='<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html>
<head>
<title></title>
<link rel="stylesheet" type="text/css" href="../Styles/style.css"/>
</head>
<body>'


# Define the footer content
footer='</body>
</html>'

# Loop through files matching the pattern
for file in [0-9][0-9]-[A-Z0-9][A-Za-z]*.html; do
    # Create a temporary file
    tmpfile=$(mktemp)
    # Add the header to the temporary file
    echo "$header" > "$tmpfile"
    # Append the footer to the file
    echo "$footer" >> "$file"
    # Append the original file content to the temporary file
    cat "$file" >> "$tmpfile"
    # Move the temporary file to the original file
    mv "$tmpfile" "$file"
done

echo
echo "   Popravljam html datoteke..."
echo
# Paragraphs replaced line before with <p>\&nbsp;<\/p>
#sed -i ':a;N;$!ba;s/\(<span class=\"verseNbr\">[0-9]\+<\/span>\)\n   \n/<p>\&#160;<\/p>\n  \1\n   /g'  $SloKJVepubPath/html/*.html
sed -i ':a;N;$!ba;s/\(<span class=\"verseNbr\">[0-9]\+<\/span>\)\n   \n/<br \/>\n  \1\n   /g'  $SloKJVepubPath/html/*.html




echo "   Hebrejske crke - pobrisem ALEF ... vrstice v Ps 119"
# cat 22-Ps.html |grep -1 "Blagoslovljeni so neomade"
sed -i '/[א-ת]/d' $SloKJVepubPath/html/22-Ps.html
      #  sed -i "s/ \([א-ת]\)\]/ \1\]<br>/g" $SloKJVepubPath/html/22-Ps.html   # Vstavi <br> ce hebr. ostane
# cat 22-Ps.html |grep -1 "Blagoslovljeni so neomade"


# Popravi kazalo da ni pikice pred -Kazalo in ga spremeni v H2
#  13 <li>
#  14  <a href="01-toc.html">Kazalo</a>
#  15  </li>
sed -i ':a;N;$!ba;s/<ul>\n<li>\n <a href=\"01-toc.html\">Kazalo knjig<\/a>\n <\/li>/<H2>Kazalo knjig<\/H2>\n<ul>/g' $SloKJVepubPath/html/01-toc.html

# Spravi gor <ul> za dve vrstici
#</a>
# 
# <ul>
sed -i ':a;N;$!ba;s/<\/a>\n \n <ul>/<\/a><ul>/g' $SloKJVepubPath/html/01-toc.html

echo "    #Spravi gor <li> za eno vrstico in vmes doda presledek"
sed -i ':a;N;$!ba;s/<li>\n <a/<li> <a/g' $SloKJVepubPath/html/01-toc.html

echo "   Pri vrstici Pregovor odstrani prvi presledek v tej vrstici "
echo "      da ne pride to dvakrat v kazalo "
echo "      in baskslah li da eno visje "
sed -i ':a;N;$!ba;s/<li> <a href=\"02-foreword.html\">Predgovor<\/a>\n <\/li>/<li><a href=\"02-foreword.html\">Kolofon in predgovor<\/a><\/li><br \/>/g' $SloKJVepubPath/html/01-toc.html

rm $SloKJVepubPath/templates/toc_temp.txt     >/dev/null 2>&1
echo "   Doda dodatno kazalo knjig v zacasno datoteko in uposteva dodan presledek dve vrstici nazaj"
cat $SloKJVepubPath/html/01-toc.html |grep '<li> <a' >$SloKJVepubPath/templates/toc_temp.txt

echo "   Zamenja ul z  baskslash li"
sed -i 's/<ul>/<\/li>/g' $SloKJVepubPath/templates/toc_temp.txt

#echo '<h2>Podrobno kazalo</h2>' >> $SloKJVepubPath/templates/toc_temp.txt
#
# awk  -vn=1 '{print}; /Predgovor/ && n{while (getline <"templates/toc_temp.txt") print;n=0}' html/01-toc.html >html/01-toc-popravljen.html 
#awk   -v n=1 '{print}; /Predgovor/ && n{while (getline <\"templates/toc_temp.txt\") print;n=0}' html/01-toc.html > html/01-toc-popravljen.html
#
#mv html/01-toc-popravljen.html html/01-toc.html
#
# Pobrise zacasno datoteko
#rm templates/toc_temp.txt


echo "  V podrobnem kazalu odstrani naslove poglavij knjig da ostanejo samo stevilke poglavij"
sed -i 's/^ <a href=\"\([-a-zA-Z0-9]*\).html\">\([0-9A-Za-zčžšČŽŠ., ]*\) \([0-9]*\)<\/a>/<a href=\"\1.html\">\3<\/a>/g'    $SloKJVepubPath/html/01-toc.html
	# sed -i 's/Salomonova pesem \[hebr. Pesem pesmi\] \([0-9]\)<\/a>,/\1<\/a>,/g'                                               $SloKJVepubPath/html/01-toc.html

echo "  Naslovi knjig in poglavij se popravljajo v templates/sl-utf8.conf"
# sed -i 's/Kraljev/Kralji/g'                                                                                                $SloKJVepubPath/html/01-toc.html      # |head -50 $SloKJVepubPath/toc.ncx
# sed -i 's/Dela/Apostolska Dela/g'                                                                                          $SloKJVepubPath/html/01-toc.html      # |head -50 $SloKJVepubPath/toc.ncx
# sed -i 's/Kraljev/Kralji/g'                                                                                                $SloKJVepubPath/toc.ncx               # |head -50 $SloKJVepubPath/toc.ncx
# sed -i 's/Dela/Apostolska Dela/g'                                                                                          $SloKJVepubPath/toc.ncx               # |head -50 $SloKJVepubPath/toc.ncx


echo "   Kazalo  html/01-toc.html  popravi ..."
echo "      da se da klikati iz Kazala na tocen odlomek v knjigi..."
    # <a href=\"03-Gen-1.html\">1</a>,     
echo "      -1.html   ->   .html#chapter1"
sed -i 's/-\([0-9]*\)\.html/\.html#chapter\1/g'  $SloKJVepubPath/html/01-toc.html
echo "   Kazalo  toc.ncx           popravi ..."
sed -i 's/-\([0-9]*\)\.html/\.html#chapter\1/g'  $SloKJVepubPath/toc.ncx      # |head -50 $SloKJVepubPath/toc.ncx
echo " "


#head -9 $SloKJVepubPath/html/04-Gen.html
echo "   Popravi posamezne datoteke da linki delujejo."
echo "       <h2>Geneza<br>1. poglavje</h2>   ->    <h2 id=\"chapter2\" >Geneza<br>1. poglavje</h2>"
  for file in *.html; do
    sed -i 's/<h2 class=\"center-text\">\([A-Za-z0-9 ,\xC4\x8C\xC4\x8D\xC5\xA0\xC5\xA1\xC5\xBD\xC5\xBE]*\)<\/h2><h3 class=\"center-text\">\([0-9]*\)/<h2 class=\"center-text\" id=\"chapter\2\">\1<\/h2><h3 class=\"center-text\">\2/g' "$file"
  done
#head -9 $SloKJVepubPath/html/04-Gen.html



echo "  Popravi datum na trenutni v content_opf.xhtml "
# Get the current date in the format YYYY-MM-DD
current_date_eng=$(date +%Y-%m-%d)
# echo $current_date_eng
#  current_date=$(date +%d-%m-%Y) brez presledkov - narobe
current_date_slo=$(date +"%d. %m. %Y")
# echo $current_date_slo

# Define the file path
content_path="$SloKJVepubPath/html/00_vsebino_metadata_daj_v_content.opf.xhtml"
uvod_path="$SloKJVepubPath/html/02-foreword.html"

# Use sed to replace the date in the XML file
#        2007/opf">2023-01-01</dc
sed -i "s/2007\/opf\">[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}/2007\/opf\">$current_date_eng/" "$content_path"

#  Popravi   Datum   v Uvodu na danasnji datum:
sed -i "s/Datum\:/Datum\: $current_date_slo/" "$uvod_path"
# cat $uvod_path
# cat $content_path
echo



echo "  V kazalo vnese Novo in Staro zavezo. "
#  <li><h2>Stara zaveza</h2></li>
#  <li><a href="04-
sed -i 's|<li> <a href="04-|<\/ul><h2>Stara zaveza<\/h2>\n<li><a href="04-|g' $SloKJVepubPath/html/01-toc.html
#  <li><h2>Nova zaveza</h2></li>
#  <li> <a href="43-
sed -i 's|<li> <a href="43-|<h2>Nova zaveza<\/h2>\n<li><a href="43-|g' $SloKJVepubPath/html/01-toc.html
# cat $SloKJVepubPath/html/01-toc.html |grep zaveza




echo
echo "   Pozene Urejevalnik besedil in v njem pripravi toc.ncx"
echo
gnome-terminal -- sh -c "gedit $SloKJVepubPath/toc.ncx"

echo
echo "   Pozene Sigil 2.0...     zakomentiran"
echo
echo "   Nadaljuj z  Text, desni klik, add existing files "
echo "   iz mape $SloKJVepubPath/html "
echo
echo "   Potem imas v imenih datotek na vrhu navodila "
echo
#echo "  Ko to koncas to objavi na https://kdp.amazon.com/ "
#echo
/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=sigil --file-forwarding com.sigil_ebook.Sigil >/dev/null 2>&1
		# sigil >/dev/null 2>&1    # Ta pozene verzijo 3.0


echo "  Prekopira v Github mapo "
mv $SloKJVepubPath/untitled.epub $SloKJV_Github/SloKJV.epub    >/dev/null 2>&1

echo "   Poglejmo ePUB z mupdf bralnikom ..."
mupdf $SloKJV_Github/SloKJV.epub


cd $SloKJV_Github

# git add SloKJV.epub
# git commit -m SloKJV - epub Kindle Kobo...

# echo "   Pozene github # zakomentirano"
# github

cd $SloKJVepubPath

# echo "   Odpre brskalnik kjer se knjigo nalozi na Amazon.com"
# xdg-open https://kdp.amazon.com/


echo
echo "   Preveri ePUB "
echo
java -jar /home/pc/util/epubcheck-5.1.0/epubcheck.jar  $SloKJV_Github/SloKJV.epub >$SloKJVepubPath/log.txt 2>&1
echo " "
echo "   Pokaze napake v ePUB "
echo " "
gnome-terminal -- sh -c "gedit $SloKJVepubPath/log.txt"
echo " "
# ======== Pobrise vse  *.html  datoteke =====
echo "   Pocisti datoteke za seboj da ni guzve na Githubu"
echo "     Brisanje datotek ...."
                find $SloKJVepubPath/html  . -type f -name "*.xhtml"  -exec rm {} +   >/dev/null 2>&1
                find $SloKJVepubPath/html  . -type f -name "*.html"  -exec rm {} +    >/dev/null 2>&1
# ======== Pobrise vse  *.html  datoteke =====
echo " "
echo "   Konec"
echo " "


